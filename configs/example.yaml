# configs/example.yaml

densegen:
  input_dir: "pipeline/tfbsfetcher"   # Relative to deg2tfbs package root
  output_dir: "output_sequences"      # (Not used directly; output is now saved inside batches/)
  progress_file: "progress_status.yaml"  # Minimal progress tracker file
  solver: "GUROBI"                    # Preferred solver; falls back to CBC if necessary.
  solver_options:
    - "Threads=16"
    - "TimeLimit=20"
  sequence_length: 100
  quota: 5                            # Total number of dense arrays to generate.
  subsample_size: 10
  arrays_generated_before_resample: 1   # Set >1 to generate multiple arrays per tfbs library.
  sources:
    - "tfbsbatch_20250130_heat_shock_up"
    - "tfbsbatch_20250130_nutrient_lim_up"
    - "tfbsbatch_20250130_poor_carbon_acetate_up"
  fixed_elements:
    promoter_constraints:
      - upstream: "TTGACA"
        downstream: "TATAAT"
        upstream_pos: [20, 80]
        spacer_length: [16, 18]
    side_biases:
      left: []
      right: []
  unique_tf_only: true
  fill_gap: true                  # Enable gap filling if the optimized sequence is too short.
  fill_gap_end: "5prime"          # Append gap fill nucleotides to the 5' end.
  fill_gc_min: 0.40
  fill_gc_max: 0.60

data_sources:
  - name: ecocyc_promoters
    path: "sequences/EcoCyc/ecocyc_28_promoters_2025-01-23.pt"
  - name: regulondb_promoters
    path: "sequences/RegulonDB/regulondb_13_promoters_2025-01-23.pt"
