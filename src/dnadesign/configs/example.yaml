# configs/example.yaml

latdna:
  mode: generation  # Set to "analysis" when running analysis
  dry_run: false    # true for dry run (no files written)
  # Generation Mode Settings
  dense_array_for_generation: densebatch_test
  sequence_length: 120
  gc_content_range: [0.4, 0.6]
  seed: 42
  fixed_elements:
    upstream_seq: "TTGACA"
    downstream_seq: "TATAAT"
    upstream_start: 70
    spacer_range: [16, 18]
  tiling:
    step: 1
  motifs:
    crp: 
      - "AACCGTGCTCCCACTCGCAGTC"
      - "ATTGGTGAGGAACTTAACAATA"
    arca: "ATGTTAATAAAATGTTAA" # DAP-seq
    lrp: "AATAACAGAATAAAATGCTGA" # DAP-seq
    gadx: "AAAATATCAAAATCAGATAT"
    iclr: "CGGAAACAATTTCCATTTT" # DAP-seq
    arac: "AGGGGCGAATTATCTCTT"
    gadw: "AAGTCGTTTTTCTGCTTAG"
    rob: "GTTTTAGCATTTTGTGCTTTT" # DAP-seq
    fadr: "TGGTCAGACCTGTTC" # DAP-seq
    gals: "GTGTAAACGATTCCAC"
    galr: "CTGTAACCGTTTCCAT"
    yiau: "AAAAACAATATGTCGTTAT"
    torr: "TGTCAATATCTGTTCATATCT" # DAP-seq
    gade: "ATAGGCGTTTACTATATTGA"
    dcur: "AAATTAATAATTAAGGG"
    mlc: "ATTTTGATCTGCGAAATTAA" # DAP-seq
    rutr: "TTTGACCATTTGGTC" # DAP-seq
    fliz: "AAATTTGACTTAAGT" # DAP-seq
    rbsr: "CGAAACGTTTCGCT" # DAP-seq
    pepa: "ATTTGGTCCACTTTTTTCTGCTCGTTT"
    glcc: "GGTCCTACCTGTGCA"
    
  # Analysis Mode Settings (used when mode is "analysis")
  analysis_inputs:
    dense_batch: densebatch_test
    latdna_batch: latdnabatch_20250405
  metrics:
    - cosine
    - euclidean
    - log1p_euclidean
  group_by: tf  # Options: "all" or "tf"
  plots:
    boxplot: true
    save_path: "plots/latdna_analysis_20250405.png"


libshuffle:
  input_pt_path: sequences/densebatch_test
  output_dir_prefix: shuffle_sigma70_test        # Used for naming the batch results directory
  save_selected_pt: true                         # If true, save selected subsample .pt files in batch results
  subsample_size: 16                             # Default subsample size
  num_draws: 1000                                # Number of subsampling iterations
  with_replacement: false
  random_seed: 42
  max_attempts_per_draw: 10
  evo2_metric:
    type: "cosine"                               # Options: "l2", "log1p_l2", "cosine"
  billboard_metric:
    composite_score: true                        # true: compute composite; false: use a single raw metric
    method: "percentile_avg"                     # Options: "zscore_pca", "minmax_weighted", "cds", "percentile_avg", "inverse_rank_sum"
    normalize: "null"                            # Options: "zscore", "minmax", or null (if no normalization)
    core_metrics:
      - 1_minus_gini
      - mean_jaccard
      - median_tf_entropy
    weights: {}
  joint_selection:
    method: "both"                               # Options: "null", "x_only", "both"
    y_percentile: 50                             # Only used when method is "both"
    selected_subsample_ids: [ "sublibrary_929", "sublibrary_957" ]
  plot:
    base_color: "gray"                           # Base color for non-filtered points (unused in threshold modes)
    highlight_color: "red"                       # Color for threshold-passing points (determined by unique cluster count)
    alpha: 0.35                                  # Default alpha for points
    hit_zone_alpha: 0.8                          # Alpha for points in the hit zone
    non_hit_zone_alpha: 0.3                      # Alpha for points outside the hit zone
    dpi: 600
    filename: scatter_summary.png
    size_by_cluster: true                        # If true, marker size scales by unique cluster count
    size_multiplier: 20                          # Multiplier for sizing by cluster count (ignored if marker_size is set)
    marker_size: 50                              # Constant marker size (overrides size_by_cluster)
    log_transform: false                         # When true, applies logâ‚‚ transformation to the y-axis
    annotate_x_threshold: true                   # If true, annotate points exceeding the x threshold with numeric suffix


billboard:
  output_dir_prefix: sub957
  dry_run: false
  # Provide only the subdirectory name (or relative path) within the sequences folder.
  pt_files:
    - sub957
  track_unique_roster: true
  allow_variable_sequence_length: false
  include_fixed_elements_in_combos: false
  save_plots: true
  save_csvs: true
  dpi: 600
  # List of core diversity metrics to compute
  diversity_metrics:
    - tf_richness
    - 1_minus_gini
    - mean_jaccard
    - median_tf_entropy
  # Weights for the weighted sum composite (must sum to 1 if desired)
  composite_weights:
    tf_richness: 0.4
    1_minus_gini: 0.3
    mean_jaccard: 0.2
    median_tf_entropy: 0.1


densegen:
  input_sources:
    - type: "deg2tfbs_pipeline_tfbsfetcher"
      name: "m9_acetate_tfs"
      path: "tfbsbatch_20250321"
  output_dir: "sequences"
  progress_file: "progress_status.yaml"
  solver: "GUROBI"
  diverse_solution: true
  solver_options:
    - "Threads=16"
    - "TimeLimit=10"
  quota: 10000
  sequence_length: 120
  subsample_over_length_budget_by: 100
  subsample_size: 20  # legacy
  round_robin: true
  arrays_generated_before_resample: 100  
  fixed_elements:
    promoter_constraints:
      - name: "sigma70_consensus"
        upstream: "TTGACA"
        downstream: "TATAAT"
        spacer_length: [16, 18]
        upstream_pos: [10, 100]
      # - name: "sigma70_consensus_+"
      #   upstream: "TTGACA"
      #   downstream: "TGTATAATGCT"
      #   spacer_length: [14, 16]
      #   upstream_pos: [10, 100]
      # - name: "sigma70_consensus_-"
      #   upstream: "TTGACA"
      #   downstream: "TCTATAATGAG"
      #   spacer_length: [14, 16]
      #   upstream_pos: [10, 100]
      # - name: "sigma70_mid"
      #   upstream: "ACCGCG"
      #   downstream: "ACCTAA"
      #   spacer_length: [16, 18]
      #   upstream_pos: [10, 100]
      # - name: "sigma70_low"
      #   upstream: "GCAGGT"
      #   downstream: "CCTCGC"
      #   spacer_length: [16, 18]
  unique_tf_only: true
  fill_gap: true
  fill_gap_end: "5prime"
  fill_gc_min: 0.40
  fill_gc_max: 0.60

evoinference:
  data_sources:
    - dir: seqbatch_hernandez_et_al_positive
  evo_model:
    version: "evo2_7b"
    save_pooled_only: true
    output_types:
      - type: "logits"
        pooling:            # Optional key for pooling
          method: "mean"
          dim: 1
      # - type: "embeddings"
      #   layers: ["blocks_26_mlp_l3"]
    overwrite_existing: false
    checkpoint_every: 100


clustering:
  batch_name: "test"
  input_sources:
    - dir: "densebatch_test"
    - dir: "sub957"
  method: "input_source"
  add_meta_cluster_count: true
  update_in_place: true
  cluster_selection:
    num_files: 0
    order: "max"
    custom_clusters: []
  overlay_cluster_numbers: true
  umap:
    enabled: true
    plot_dimensions: [5, 5]
    alpha: 0.2
    one_hot_key: "sequence"
    # 'alpha' is deprecated when using highlight mode.
    # Instead, use background_alpha and background_size for background points,
    # and highlight_alpha and highlight_size for highlight points.
    hue:
      method: "highlight"              # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", highlight", "type"
      numeric_hue: None
      normalization: "robust"                       
      background_alpha: 0.05
      background_size: 2.0
      highlight_alpha: 0.8
      highlight_size: 16.0
      # highlight_dirs must be a subset of input_sources.
      highlight_dirs:
        - "sub957"
  output_prefix: "clusterbatch_"
  analysis:
    cluster_composition: true
    cluster_composition_plot_dimensions: [14, 4]
    diversity_assessment: true
    diversity_assessment_plot_dimensions: [10, 4]
    differential_feature_analysis: true


nmf:
  batch_name: "densebatch_deg2tfbs_pipeline_tfbsfetcher_m9_acetate_tfs_n10000_subsample20_diverse"
  k_range: [2, 36]
  n_init: 10
  max_iter: 1000
  init: "nndsvdar"
  solver: "cd"
  loss: "frobenius"
  # Set encoding_mode to "positional_bins" to activate the new approach.
  encoding_mode: "positional_bins"
  positional_binning:
    enable: true        # Enable positional binning mode.
    num_bins: 10        # Number of bins to divide each sequence.
  max_motif_occupancy: 5
  strand_aware: false
  normalize_coefficients: true
  clip_h_max: 3.0
  best_k: 12
  regularization:
    enable: true
    type: "l2"
    alpha: 0.01
  plots:
    generate_heatmaps: true
    generate_motif_occurrence_heatmap: true
    generate_program_association_barplot: true
    generate_sequence_program_decomposition: false
    generate_motif_barplots: true
    generate_elbow_plot: true
    generate_riverplot: true
    generate_stability_plots: true
    generate_signature_stability_riverplot: true
  clustering:
    enable_w_clustering: true
    linkage_method: "ward"
  diagnostics:
    max_top_tfs: 10
    barplot_ncols: 4
    pick_representative_for_stackplot: true
    n_sequences_for_stackplot: 1000
  diversity_score:
    enable: true
    alpha: 0.5
    plot_across_k: true
  stability_metrics:
    enable: true
    metrics: ["frobenius", "amari", "cv", "silhouette_sum", "silhouette_mean", "cophenetic"]
    similarity_threshold: 0.6
    min_common_tfs: 3
    optimal_k_selection_method: "elbow"


densehairpins:
  batch_name: "repromin_tfs_all_tfbs_subsample20_arrays10"
  run_post_solve: true
  consensus_only: false
  random_subsample_per_solve: true
  solver: "CBC"
  solver_options:
    - "Threads=16"
    - "TimeLimit=50"
  sequence_length: 30
  quota: 10
  subsample_size: 20
  analysis_style: "aggregate"  # Options: "per_batch" or "aggregate"
  target_batch: "repromin_tfs_all_tfbs_subsample200"  # Only needed for per_batch mode
  score_weights:
    silenced_genes: 1
    induced_genes: 1
    tf_diversity: 2 


tfkdanalysis:
  batch_name: "araC_and_pspF"
  # regulators: ["araC", "lacI", "rbsR", "rhaS", "rhaR", "cra", "malT", "treR", "xylR", "galR", "galS", "argR", "trpR", "metJ", "marR", "marA", "soxR", "soxS", "rob", "oxyR", "pspF", "cpxR", "lexA", "phoB", "cueR", "flhC", "csgD", "slyA", "sdiA", "rcdA", "mcbR", "arcA"] # "metR"
  regulators: ["araC", "lacI", "argR", "marR", "marA", "soxR", "soxS", "rob", "pspF", "cpxR", "lexA", "phoB", "cueR", "arcA"]
  media: "glu"
  volcano_plot: true
  volcano_point_size: null  # Options include: 'DAP Fold change (peak intensity/background intensity)', etc.
  threshold: "1.2"
  tolerate_nas: true
  annotate_operon: true


# Future section for seqpermuter (to be defined later)