# configs/example.yaml

libshuffle:
  # Directory containing exactly one .pt file
  input_pt_path: sequences/densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_5_sigma70_consensus_n10000       
  # (Used in output; see main.py)
  output_dir_prefix: shuffle_sigma70_test           
  subsample_size: 100
  num_draws: 200
  with_replacement: true
  random_seed: 42
  max_attempts_per_draw: 10
  evo2_metric:
    # Options: "l2", "log1p_l2", etc.
    type: "l2"                                    
  billboard_metric:
    # Options: "sum_raw" or specific key (e.g., per_tf_entropy_mean)
    type: "sum_raw"                               
    use_normalized: false
  joint_selection:
    enable: true
    method: "threshold"
    billboard_min: 0.68
    evo2_min: 0.5
    normalize: false
    save_top_k: 3
  save_selected_pt: true
  plot:
    highlight_color: "pastel_red"                 
    base_color: "gray"                            
    alpha: 0.5
    dpi: 600
    filename: scatter_summary.png

billboard:
  dry_run: false
  pt_files:
    # - sequences/densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma24_consensus_n10000
    # - sequences/densebatch_deg2tfbs_pipeline_tfbsfetcher_m9_acetate_tfs_n10000_no_resample
    - sequences/densebatch_deg2tfbs_pipeline_tfbsfetcher_m9_acetate_tfs_n10000
  track_unique_roster: true
  allow_variable_sequence_length: false
  include_fixed_elements_in_combos: false
  output_dir_prefix: m9_tf_set
  save_plots: true
  save_csvs: true
  dpi: 600

densehairpins:
  batch_name: "repromin_tfs_all_tfbs_subsample20_arrays10"
  run_post_solve: true
  consensus_only: false
  random_subsample_per_solve: true
  solver: "CBC"
  solver_options:
    - "Threads=16"
    - "TimeLimit=50"
  sequence_length: 30
  quota: 10
  subsample_size: 20
  analysis_style: "aggregate"  # Options: "per_batch" or "aggregate"
  target_batch: "repromin_tfs_all_tfbs_subsample200"  # Only needed for per_batch mode
  score_weights:
    silenced_genes: 1
    induced_genes: 1
    tf_diversity: 2 

tfkdanalysis:
  batch_name: "araC_and_pspF"
  # regulators: ["araC", "lacI", "rbsR", "rhaS", "rhaR", "cra", "malT", "treR", "xylR", "galR", "galS", "argR", "trpR", "metJ", "marR", "marA", "soxR", "soxS", "rob", "oxyR", "pspF", "cpxR", "lexA", "phoB", "cueR", "flhC", "csgD", "slyA", "sdiA", "rcdA", "mcbR", "arcA"] # "metR"
  regulators: ["araC", "lacI", "argR", "marR", "marA", "soxR", "soxS", "rob", "pspF", "cpxR", "lexA", "phoB", "cueR", "arcA"]
  media: "glu"
  volcano_plot: true
  volcano_point_size: null  # Options include: 'DAP Fold change (peak intensity/background intensity)', etc.
  threshold: "1.2"
  tolerate_nas: true
  annotate_operon: true

densegen:
  input_sources:
    - type: "deg2tfbs_pipeline_tfbsfetcher"
      name: "m9_acetate_tfs"
      path: "tfbsbatch_20250321"
  output_dir: "sequences"
  progress_file: "progress_status.yaml"
  solver: "GUROBI"
  diverse_solution: true
  solver_options:
    - "Threads=16"
    - "TimeLimit=10"
  quota: 10000
  sequence_length: 120
  subsample_over_length_budget_by: 100
  subsample_size: 20  # legacy
  round_robin: true
  arrays_generated_before_resample: 100  
  fixed_elements:
    promoter_constraints:
      - name: "sigma70_consensus"
        upstream: "TTGACA"
        downstream: "TATAAT"
        spacer_length: [16, 18]
        upstream_pos: [10, 100]
      # - name: "sigma70_consensus_+"
      #   upstream: "TTGACA"
      #   downstream: "TGTATAATGCT"
      #   spacer_length: [14, 16]
      #   upstream_pos: [10, 100]
      # - name: "sigma70_consensus_-"
      #   upstream: "TTGACA"
      #   downstream: "TCTATAATGAG"
      #   spacer_length: [14, 16]
      #   upstream_pos: [10, 100]
      # - name: "sigma70_mid"
      #   upstream: "ACCGCG"
      #   downstream: "ACCTAA"
      #   spacer_length: [16, 18]
      #   upstream_pos: [10, 100]
      # - name: "sigma70_low"
      #   upstream: "GCAGGT"
      #   downstream: "CCTCGC"
      #   spacer_length: [16, 18]
  unique_tf_only: true
  fill_gap: true
  fill_gap_end: "5prime"
  fill_gc_min: 0.40
  fill_gc_max: 0.60

evoinference:
  data_sources:
    # Promoter engineering datasets
    - dir: seqbatch_hernandez_et_al_positive
    - dir: seqbatch_hernandez_et_al_negative
    - dir: seqbatch_hossain_et_al
    - dir: seqbatch_johns_et_al
    - dir: seqbatch_kosuri_et_al
    - dir: seqbatch_lafleur_et_al
    - dir: seqbatch_sun_yim_et_al
    - dir: seqbatch_urtecho_et_al
    - dir: seqbatch_yu_et_al
    - dir: seqbatch_xiaowo_et_al
    # EcoCyc datasets
    - dir: seqbatch_ecocyc_28_promoters
    - dir: seqbatch_ecocyc_28_tfbs_set
    # RegulonDB datasets
    - dir: seqbatch_regulondb_13_promoter_set
    - dir: seqbatch_regulondb_13_promoter_FecI_set
    - dir: seqbatch_regulondb_13_promoter_FliA_set
    - dir: seqbatch_regulondb_13_promoter_RpoD_set
    - dir: seqbatch_regulondb_13_promoter_RpoE_set
    - dir: seqbatch_regulondb_13_promoter_RpoH_set
    - dir: seqbatch_regulondb_13_promoter_RpoN_set
    - dir: seqbatch_regulondb_13_promoter_RpoS_set
    - dir: seqbatch_regulondb_13_tf_ri_set
    # Randomly generated sequences
    - dir: seqbatch_random_promoters
    - dir: seqbatch_random_promoters_sigma70_consensus
    - dir: seqbatch_random_promoters_sigma70_consensus_+
    - dir: seqbatch_random_tfbs
    # densegen sequences
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma24_consensus_n10000
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma32_consensus_n10000
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma38_consensus_n10000
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_consensus_-_n10000
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_consensus_+_n10000
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_consensus_n10000
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_low_n10000
    - dir: densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_mid_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_0_sigma70_consensus_+_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_0_sigma70_consensus_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_1_sigma70_consensus_+_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_1_sigma70_consensus_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_2_sigma70_consensus_+_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_2_sigma70_consensus_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_3_sigma70_consensus_+_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_3_sigma70_consensus_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_4_sigma70_consensus_+_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_4_sigma70_consensus_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_5_sigma70_consensus_+_n10000
    - dir: densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_5_sigma70_consensus_n10000

  evo_model:
    version: "evo2_7b"
    save_pooled_only: true
    output_types:
      - type: "logits"
        pooling:            # Optional key for pooling
          method: "mean"
          dim: 1
      # - type: "embeddings"
      #   layers: ["blocks_26_mlp_l3"]
    overwrite_existing: false
    checkpoint_every: 100


# ================================
# Batch 1: All Densegen
# ================================
# clustering:
#   batch_name: "all_densegen"
#   input_sources:
#     - pattern: "densebatch_*"
#   method: "leiden"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [10, 5]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "type"                            # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 2: All Directories
# ================================
# clustering:
#   batch_name: "all"
#   input_sources:
#     - pattern: "*"    # All directories
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [10, 5]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "seq_length"                          # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 3: Regulondb Promoters by Regulon
# ================================
# clustering:
#   batch_name: "regulondb_promoters_by_regulon"
#   input_sources:
#     - dir: "seqbatch_regulondb_13_promoter_FecI_set"
#     - dir: "seqbatch_regulondb_13_promoter_FliA_set"
#     - dir: "seqbatch_regulondb_13_promoter_RpoD_set"
#     - dir: "seqbatch_regulondb_13_promoter_RpoE_set"
#     - dir: "seqbatch_regulondb_13_promoter_RpoH_set"
#     - dir: "seqbatch_regulondb_13_promoter_RpoN_set"
#     - dir: "seqbatch_regulondb_13_promoter_RpoS_set"
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [10, 5]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "input_source"                          # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 5: Regulondb, Ecocyc, and Random Promoter Sets
# ================================
# clustering:
#   batch_name: "regulondb_and_ecocyc_and_random_promoter_sets"
#   input_sources:
#     - dir: "seqbatch_regulondb_13_promoter_set"
#     - dir: "seqbatch_ecocyc_28_promoters"
#     - dir: "seqbatch_random_promoters"
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [6, 4]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "type"                          # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 8: Regulondb, Ecocyc, and Random TFBS
# ================================
clustering:
  batch_name: "regulondb_and_ecocyc_and_random_tfbs"
  input_sources:
    - dir: "seqbatch_ecocyc_28_tfbs_set"
    - dir: "seqbatch_regulondb_13_tf_ri_set"
    - dir: "seqbatch_random_tfbs"
  method: "input_source"
  cluster_selection:
    num_files: 0
    order: "max"
    custom_clusters: []
  overlay_cluster_numbers: true
  umap:
    enabled: true
    plot_dimensions: [6, 4]
    alpha: 0.2
    one_hot_key: "sequence"
    hue:
      method: "gc_content"                          # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
      numeric_hue: None
      normalization: "robust"
  output_prefix: "clusterbatch_"
  analysis:
    cluster_composition: true
    cluster_composition_plot_dimensions: [14, 4]
    diversity_assessment: true
    diversity_assessment_plot_dimensions: [10, 4]
    differential_feature_analysis: true

# ================================
# Batch 9: Hernandez "Positive" and "Negative" Promoters
# ================================
# clustering:
#   batch_name: "hernandez_pos_and_neg"
#   input_sources:
#     - dir: "seqbatch_hernandez_et_al_positive"
#     - dir: "seqbatch_hernandez_et_al_negative"
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [6, 4]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "input_source"                        # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 10: Engineered Promoters
# ================================
# clustering:
#   batch_name: "all_engineered_promoters"
#   input_sources:
#     - dir: "seqbatch_hossain_et_al"
#     - dir: "seqbatch_lafleur_et_al"
#     - dir: "seqbatch_johns_et_al"
#     - dir: "seqbatch_kosuri_et_al"
#     - dir: "seqbatch_urtecho_et_al"
#     - dir: "seqbatch_yu_et_al"
#     - dir: "seqbatch_sun_yim_et_al"
#     - dir: "seqbatch_xiaowo_et_al"
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [6, 4]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "input_source"                                   # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: [
#                     "seqbatch_hossain_et_al": "meta_observed_log_RNA_over_ref",
#                     "seqbatch_lafleur_et_al": "meta_observed_log_RNA_over_ref",
#                     "seqbatch_urtecho_et_al": "meta_observed_log_RNA_over_ref",
#                     "seqbatch_yu_et_al": "meta_observed_log_RNA_over_ref",
#                     "seqbatch_kosuri_et_al": "meta_mean_RNA",
#                     "seqbatch_kosuri_et_al": "meta_sd_RNA",
#                     "seqbatch_kosuri_et_al": "meta_mean_prot",
#                     "seqbatch_kosuri_et_al": "meta_sd_prot",
#                     "seqbatch_johns_et_al": "meta_observed_tx_norm_LB_exp",
#                     "seqbatch_johns_et_al": "meta_observed_tx_norm_NaCl_exp",
#                     "seqbatch_johns_et_al": "meta_observed_tx_norm_Fe_exp",
#                     "seqbatch_johns_et_al": "meta_observed_tx_norm_LB-stat",
#                     "seqbatch_johns_et_al": "meta_observed_tx_norm_M9-exp",
#                     "seqbatch_sun_yim_et_al": "meta_gene_in_vitro_tx",
#                     "seqbatch_sun_yim_et_al": "meta_gene_in_vivo_tx",
#                     "seqbatch_xiaowo_et_al": "meta_exp_mean(log2)"
#       ]
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [10, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 11: Engineered Promoters and Densegen (Wildcard)
# ================================
# clustering:
#   batch_name: "engineered_promoters_and_densegen"
#   input_sources:
#     # - dir: "seqbatch_johns_et_al"
#     - dir: "seqbatch_kosuri_et_al"
#     - dir: "seqbatch_lafleur_et_al"
#     - dir: "seqbatch_sun_yim_et_al"
#     - dir: "seqbatch_urtecho_et_al"
#     - dir: "seqbatch_yu_et_al"
#     - dir: "seqbatch_xiaowo_et_al"
#     - pattern: "densebatch_*"
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [10, 5]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "type"                      # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 12: Regulondb, Ecocyc, Random, and Densegen Promoter Sets
# ================================
# clustering:
#   batch_name: "dense_arrays_and_TFBSs"
#   input_sources:
#     # - dir: "seqbatch_regulondb_13_promoter_set"
#     # - dir: "seqbatch_ecocyc_28_promoters"
#     - dir: "seqbatch_ecocyc_28_tfbs_set"
#     - dir: "seqbatch_regulondb_13_tf_ri_set"
#     # - dir: "seqbatch_random_tfbs"
#     # - dir: "seqbatch_random_promoters"
#     # - dir: "seqbatch_random_promoters_sigma70_consensus"
#     # - dir: "seqbatch_random_promoters_sigma70_consensus_+"
#     - pattern: "densebatch_*"
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [10, 5]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "type"                              # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true

# ================================
# Batch 13: All Promoters
# ================================
# clustering:
#   batch_name: "fully_random_vs_constrained_promoters"
#   input_sources:
#     # - dir: "seqbatch_regulondb_13_promoter_set"
#     # - dir: "seqbatch_ecocyc_28_promoters"
#     - dir: "seqbatch_random_promoters"
#     - dir: "seqbatch_random_promoters_sigma70_consensus"
#     - dir: "seqbatch_random_promoters_sigma70_consensus_+"
#     # - dir: "seqbatch_johns_et_al"
#     # - dir: "seqbatch_kosuri_et_al"
#     # - dir: "seqbatch_lafleur_et_al"
#     # - dir: "seqbatch_sun_yim_et_al"
#     # - dir: "seqbatch_urtecho_et_al"
#     # - dir: "seqbatch_yu_et_al"
#     # - dir: "seqbatch_xiaowo_et_al"
#     # - pattern: "densebatch_*"
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [10, 5]
#     alpha: 0.35
#     one_hot_key: "sequence"
#     hue:
#       method: "input_source"                                  # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true


# ================================
# Batch 13: Different dense array promoter constraints
# ================================
# clustering:
#   batch_name: "dense_arrays_all_TFs_by_sigma70_consensus_mid_low_constraints_simplified"
#   input_sources:
#     # - dir: "densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_0_sigma70_consensus_n10000"
#     # - dir: "densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_1_sigma70_consensus_n10000"
#     # - dir: "densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_2_sigma70_consensus_n10000"
#     # - dir: "densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_3_sigma70_consensus_n10000"
#     # - dir: "densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_4_sigma70_consensus_n10000"
#     # - dir: "densebatch_deg2tfbs_cluster_analysis_unfiltered_cluster_5_sigma70_consensus_n10000"
#     # - dir: "densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_consensus_-_n10000"
#     # - dir: "densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_consensus_+_n10000"
#     - dir: "densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_consensus_n10000"
#     - dir: "densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_mid_n10000"
#     - dir: "densebatch_deg2tfbs_pipeline_tfbsfetcher_all_TFs_sigma70_low_n10000"
    
#   method: "input_source"
#   cluster_selection:
#     num_files: 0
#     order: "max"
#     custom_clusters: []
#   overlay_cluster_numbers: true
#   umap:
#     enabled: true
#     plot_dimensions: [10, 5]
#     alpha: 0.2
#     one_hot_key: "sequence"
#     hue:
#       method: "input_source"                        # Options: "leiden", "gc_content", "seq_length", "numeric", "input_source", "type"
#       numeric_hue: None
#       normalization: "robust"
#   output_prefix: "clusterbatch_"
#   analysis:
#     cluster_composition: true
#     cluster_composition_plot_dimensions: [14, 4]
#     diversity_assessment: true
#     diversity_assessment_plot_dimensions: [10, 4]
#     differential_feature_analysis: true


subsetter:
  input_sources:
    # Explicit or wildcard list of cluster directories to process
    - dir: "clusterbatch_*"
  selection_strategy: "random"         # Options: random, top-N, etc.
  target_sample_size: 100
  with_replacement: false

# Future section for seqpermuter (to be defined later)